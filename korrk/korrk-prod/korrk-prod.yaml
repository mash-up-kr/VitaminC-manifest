apiVersion: apps/v1
kind: Deployment
metadata:
  name: korrk-prod
  namespace: korrk-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: korrk-prod
  template:
    metadata:
      labels:
        app: korrk-prod
    spec:
      containers:
        - name: korrk-prod
          image: korrk-docker-image.kr.ncr.ntruss.com/korrk-stage:0537c532  # 테스트를 위한 임시 이미지
          command:
            - /bin/sh
            - -ec
          args:
            - |
              pnpm start:prod
          envFrom:
            - configMapRef:
                name: korrk-prod-server-env
          ports:
            - containerPort: 8000
      imagePullSecrets:
        - name: ncp-registry-credentials
---
apiVersion: v1
kind: Service
metadata:
  namespace: korrk-prod
  name: korrk-prod
  labels:
    app: korrk-prod
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8000
  selector:
    app: korrk-prod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: korrk-prod
  name: korrk-prod-ingress
  annotations:
    # kubernetes.io/ingress.class: traefik
    # traefik.ingress.kubernetes.io/router.tls: "true"
    # traefik.ingress.kubernetes.io/router.entrypoints: websecure
    # cert-manager.io/cluster-issuer: korrk-letsencrypt   # 클러스터 이슈어 (cluster-issuer.yaml)에서 지정한 명칭
spec:
  # tls:
  # - hosts:
  #   - api.korrk.kr                           # 인증서를 적용할 도메인으로 변경
  #   secretName: api-korrk-kr-cert         # 인증서 key가 저장되는 secret
  ingressClassName: traefik
  rules:
  - host: api.korrk.kr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: korrk-prod
            port:
              number: 3000